//
//Copyright (C) 2020 Graeme Sutherland, Nodestone Limited
//
//
//This program is fre software: you can redistribute it and/or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program.  If not, see <https://www.gnu.org/licenses/>.

///
// CWC Protocol
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: cwcpb.proto

package cwcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumerateChannels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnumerateChannels) Reset() {
	*x = EnumerateChannels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumerateChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumerateChannels) ProtoMessage() {}

func (x *EnumerateChannels) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumerateChannels.ProtoReflect.Descriptor instead.
func (*EnumerateChannels) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{0}
}

type ListChannels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelIds []uint32 `protobuf:"varint,1,rep,packed,name=channel_ids,json=channelIds,proto3" json:"channel_ids,omitempty"`
}

func (x *ListChannels) Reset() {
	*x = ListChannels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannels) ProtoMessage() {}

func (x *ListChannels) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannels.ProtoReflect.Descriptor instead.
func (*ListChannels) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{1}
}

func (x *ListChannels) GetChannelIds() []uint32 {
	if x != nil {
		return x.ChannelIds
	}
	return nil
}

type TimeSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime int64 `protobuf:"varint,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
}

func (x *TimeSync) Reset() {
	*x = TimeSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSync) ProtoMessage() {}

func (x *TimeSync) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSync.ProtoReflect.Descriptor instead.
func (*TimeSync) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{2}
}

func (x *TimeSync) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

type TimeSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GivenTime    int64 `protobuf:"varint,1,opt,name=given_time,json=givenTime,proto3" json:"given_time,omitempty"`
	ServerRxTime int64 `protobuf:"varint,2,opt,name=server_rx_time,json=serverRxTime,proto3" json:"server_rx_time,omitempty"`
	ServerTxTime int64 `protobuf:"varint,3,opt,name=server_tx_time,json=serverTxTime,proto3" json:"server_tx_time,omitempty"`
}

func (x *TimeSyncResponse) Reset() {
	*x = TimeSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSyncResponse) ProtoMessage() {}

func (x *TimeSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSyncResponse.ProtoReflect.Descriptor instead.
func (*TimeSyncResponse) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{3}
}

func (x *TimeSyncResponse) GetGivenTime() int64 {
	if x != nil {
		return x.GivenTime
	}
	return 0
}

func (x *TimeSyncResponse) GetServerRxTime() int64 {
	if x != nil {
		return x.ServerRxTime
	}
	return 0
}

func (x *TimeSyncResponse) GetServerTxTime() int64 {
	if x != nil {
		return x.ServerTxTime
	}
	return 0
}

type ListenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId uint32 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Callsign  string `protobuf:"bytes,2,opt,name=callsign,proto3" json:"callsign,omitempty"`
}

func (x *ListenRequest) Reset() {
	*x = ListenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenRequest) ProtoMessage() {}

func (x *ListenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenRequest.ProtoReflect.Descriptor instead.
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{4}
}

func (x *ListenRequest) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ListenRequest) GetCallsign() string {
	if x != nil {
		return x.Callsign
	}
	return ""
}

type ListenConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId  uint32 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CarrierKey uint32 `protobuf:"varint,2,opt,name=carrier_key,json=carrierKey,proto3" json:"carrier_key,omitempty"`
}

func (x *ListenConfirm) Reset() {
	*x = ListenConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenConfirm) ProtoMessage() {}

func (x *ListenConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenConfirm.ProtoReflect.Descriptor instead.
func (*ListenConfirm) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{5}
}

func (x *ListenConfirm) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *ListenConfirm) GetCarrierKey() uint32 {
	if x != nil {
		return x.CarrierKey
	}
	return 0
}

type UnlistenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId  uint32 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CarrierKey uint32 `protobuf:"varint,2,opt,name=carrier_key,json=carrierKey,proto3" json:"carrier_key,omitempty"`
}

func (x *UnlistenRequest) Reset() {
	*x = UnlistenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlistenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlistenRequest) ProtoMessage() {}

func (x *UnlistenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlistenRequest.ProtoReflect.Descriptor instead.
func (*UnlistenRequest) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{6}
}

func (x *UnlistenRequest) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *UnlistenRequest) GetCarrierKey() uint32 {
	if x != nil {
		return x.CarrierKey
	}
	return 0
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId  uint32 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CarrierKey uint32 `protobuf:"varint,2,opt,name=carrier_key,json=carrierKey,proto3" json:"carrier_key,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value      string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{7}
}

func (x *KeyValue) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *KeyValue) GetCarrierKey() uint32 {
	if x != nil {
		return x.CarrierKey
	}
	return 0
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CarrierEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      uint32                   `protobuf:"varint,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	CarrierKey     uint32                   `protobuf:"varint,5,opt,name=carrier_key,json=carrierKey,proto3" json:"carrier_key,omitempty"`
	StartTimestamp int64                    `protobuf:"varint,6,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	SendTimestamp  int64                    `protobuf:"varint,7,opt,name=send_timestamp,json=sendTimestamp,proto3" json:"send_timestamp,omitempty"`
	BitEvents      []*CarrierEvent_BitEvent `protobuf:"bytes,8,rep,name=bit_events,json=bitEvents,proto3" json:"bit_events,omitempty"`
}

func (x *CarrierEvent) Reset() {
	*x = CarrierEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierEvent) ProtoMessage() {}

func (x *CarrierEvent) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierEvent.ProtoReflect.Descriptor instead.
func (*CarrierEvent) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{8}
}

func (x *CarrierEvent) GetChannelId() uint32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *CarrierEvent) GetCarrierKey() uint32 {
	if x != nil {
		return x.CarrierKey
	}
	return 0
}

func (x *CarrierEvent) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *CarrierEvent) GetSendTimestamp() int64 {
	if x != nil {
		return x.SendTimestamp
	}
	return 0
}

func (x *CarrierEvent) GetBitEvents() []*CarrierEvent_BitEvent {
	if x != nil {
		return x.BitEvents
	}
	return nil
}

type VersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MyProtocolVersion   *VersionInfo `protobuf:"bytes,1,opt,name=my_protocol_version,json=myProtocolVersion,proto3" json:"my_protocol_version,omitempty"`
	MyCodeVersion       *VersionInfo `protobuf:"bytes,2,opt,name=my_code_version,json=myCodeVersion,proto3" json:"my_code_version,omitempty"`
	LatestStableVersion *VersionInfo `protobuf:"bytes,3,opt,name=latest_stable_version,json=latestStableVersion,proto3" json:"latest_stable_version,omitempty"`
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{9}
}

func (x *VersionInfo) GetMyProtocolVersion() *VersionInfo {
	if x != nil {
		return x.MyProtocolVersion
	}
	return nil
}

func (x *VersionInfo) GetMyCodeVersion() *VersionInfo {
	if x != nil {
		return x.MyCodeVersion
	}
	return nil
}

func (x *VersionInfo) GetLatestStableVersion() *VersionInfo {
	if x != nil {
		return x.LatestStableVersion
	}
	return nil
}

type CWCMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*CWCMessage_CarrierEvent
	//	*CWCMessage_TimeSync
	//	*CWCMessage_TimeSyncResponse
	//	*CWCMessage_ListenRequest
	//	*CWCMessage_ListenConfirm
	//	*CWCMessage_UnlistenRequest
	//	*CWCMessage_EnumerateChannels
	//	*CWCMessage_ListChannels
	//	*CWCMessage_VersionInfo
	//	*CWCMessage_KeyValue
	Msg isCWCMessage_Msg `protobuf_oneof:"msg"`
}

func (x *CWCMessage) Reset() {
	*x = CWCMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWCMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWCMessage) ProtoMessage() {}

func (x *CWCMessage) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWCMessage.ProtoReflect.Descriptor instead.
func (*CWCMessage) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{10}
}

func (m *CWCMessage) GetMsg() isCWCMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *CWCMessage) GetCarrierEvent() *CarrierEvent {
	if x, ok := x.GetMsg().(*CWCMessage_CarrierEvent); ok {
		return x.CarrierEvent
	}
	return nil
}

func (x *CWCMessage) GetTimeSync() *TimeSync {
	if x, ok := x.GetMsg().(*CWCMessage_TimeSync); ok {
		return x.TimeSync
	}
	return nil
}

func (x *CWCMessage) GetTimeSyncResponse() *TimeSyncResponse {
	if x, ok := x.GetMsg().(*CWCMessage_TimeSyncResponse); ok {
		return x.TimeSyncResponse
	}
	return nil
}

func (x *CWCMessage) GetListenRequest() *ListenRequest {
	if x, ok := x.GetMsg().(*CWCMessage_ListenRequest); ok {
		return x.ListenRequest
	}
	return nil
}

func (x *CWCMessage) GetListenConfirm() *ListenConfirm {
	if x, ok := x.GetMsg().(*CWCMessage_ListenConfirm); ok {
		return x.ListenConfirm
	}
	return nil
}

func (x *CWCMessage) GetUnlistenRequest() *UnlistenRequest {
	if x, ok := x.GetMsg().(*CWCMessage_UnlistenRequest); ok {
		return x.UnlistenRequest
	}
	return nil
}

func (x *CWCMessage) GetEnumerateChannels() *EnumerateChannels {
	if x, ok := x.GetMsg().(*CWCMessage_EnumerateChannels); ok {
		return x.EnumerateChannels
	}
	return nil
}

func (x *CWCMessage) GetListChannels() *ListChannels {
	if x, ok := x.GetMsg().(*CWCMessage_ListChannels); ok {
		return x.ListChannels
	}
	return nil
}

func (x *CWCMessage) GetVersionInfo() *VersionInfo {
	if x, ok := x.GetMsg().(*CWCMessage_VersionInfo); ok {
		return x.VersionInfo
	}
	return nil
}

func (x *CWCMessage) GetKeyValue() *KeyValue {
	if x, ok := x.GetMsg().(*CWCMessage_KeyValue); ok {
		return x.KeyValue
	}
	return nil
}

type isCWCMessage_Msg interface {
	isCWCMessage_Msg()
}

type CWCMessage_CarrierEvent struct {
	CarrierEvent *CarrierEvent `protobuf:"bytes,1,opt,name=carrier_event,json=carrierEvent,proto3,oneof"`
}

type CWCMessage_TimeSync struct {
	TimeSync *TimeSync `protobuf:"bytes,2,opt,name=time_sync,json=timeSync,proto3,oneof"`
}

type CWCMessage_TimeSyncResponse struct {
	TimeSyncResponse *TimeSyncResponse `protobuf:"bytes,3,opt,name=time_sync_response,json=timeSyncResponse,proto3,oneof"`
}

type CWCMessage_ListenRequest struct {
	ListenRequest *ListenRequest `protobuf:"bytes,4,opt,name=listen_request,json=listenRequest,proto3,oneof"`
}

type CWCMessage_ListenConfirm struct {
	ListenConfirm *ListenConfirm `protobuf:"bytes,5,opt,name=listen_confirm,json=listenConfirm,proto3,oneof"`
}

type CWCMessage_UnlistenRequest struct {
	UnlistenRequest *UnlistenRequest `protobuf:"bytes,6,opt,name=unlisten_request,json=unlistenRequest,proto3,oneof"`
}

type CWCMessage_EnumerateChannels struct {
	EnumerateChannels *EnumerateChannels `protobuf:"bytes,7,opt,name=enumerate_channels,json=enumerateChannels,proto3,oneof"`
}

type CWCMessage_ListChannels struct {
	ListChannels *ListChannels `protobuf:"bytes,8,opt,name=list_channels,json=listChannels,proto3,oneof"`
}

type CWCMessage_VersionInfo struct {
	VersionInfo *VersionInfo `protobuf:"bytes,9,opt,name=version_info,json=versionInfo,proto3,oneof"`
}

type CWCMessage_KeyValue struct {
	KeyValue *KeyValue `protobuf:"bytes,10,opt,name=key_value,json=keyValue,proto3,oneof"`
}

func (*CWCMessage_CarrierEvent) isCWCMessage_Msg() {}

func (*CWCMessage_TimeSync) isCWCMessage_Msg() {}

func (*CWCMessage_TimeSyncResponse) isCWCMessage_Msg() {}

func (*CWCMessage_ListenRequest) isCWCMessage_Msg() {}

func (*CWCMessage_ListenConfirm) isCWCMessage_Msg() {}

func (*CWCMessage_UnlistenRequest) isCWCMessage_Msg() {}

func (*CWCMessage_EnumerateChannels) isCWCMessage_Msg() {}

func (*CWCMessage_ListChannels) isCWCMessage_Msg() {}

func (*CWCMessage_VersionInfo) isCWCMessage_Msg() {}

func (*CWCMessage_KeyValue) isCWCMessage_Msg() {}

type CarrierEvent_BitEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeOffset uint32 `protobuf:"varint,1,opt,name=time_offset,json=timeOffset,proto3" json:"time_offset,omitempty"`
	BitEvent   bool   `protobuf:"varint,2,opt,name=bit_event,json=bitEvent,proto3" json:"bit_event,omitempty"`
	Last       bool   `protobuf:"varint,3,opt,name=last,proto3" json:"last,omitempty"`
}

func (x *CarrierEvent_BitEvent) Reset() {
	*x = CarrierEvent_BitEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarrierEvent_BitEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierEvent_BitEvent) ProtoMessage() {}

func (x *CarrierEvent_BitEvent) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierEvent_BitEvent.ProtoReflect.Descriptor instead.
func (*CarrierEvent_BitEvent) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CarrierEvent_BitEvent) GetTimeOffset() uint32 {
	if x != nil {
		return x.TimeOffset
	}
	return 0
}

func (x *CarrierEvent_BitEvent) GetBitEvent() bool {
	if x != nil {
		return x.BitEvent
	}
	return false
}

func (x *CarrierEvent_BitEvent) GetLast() bool {
	if x != nil {
		return x.Last
	}
	return false
}

type VersionInfo_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major   int32  `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor   int32  `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch   int32  `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	Release string `protobuf:"bytes,4,opt,name=release,proto3" json:"release,omitempty"`
}

func (x *VersionInfo_Version) Reset() {
	*x = VersionInfo_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwcpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfo_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo_Version) ProtoMessage() {}

func (x *VersionInfo_Version) ProtoReflect() protoreflect.Message {
	mi := &file_cwcpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo_Version.ProtoReflect.Descriptor instead.
func (*VersionInfo_Version) Descriptor() ([]byte, []int) {
	return file_cwcpb_proto_rawDescGZIP(), []int{9, 0}
}

func (x *VersionInfo_Version) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *VersionInfo_Version) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *VersionInfo_Version) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *VersionInfo_Version) GetRelease() string {
	if x != nil {
		return x.Release
	}
	return ""
}

var File_cwcpb_proto protoreflect.FileDescriptor

var file_cwcpb_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x77, 0x63, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a,
	0x11, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x4a, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x4f, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x22, 0x51,
	0x0a, 0x0f, 0x55, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x22, 0x72, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb3, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x62, 0x69, 0x74, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x09, 0x62, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x5c, 0x0a,
	0x08, 0x42, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69,
	0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62,
	0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x0b,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x13, 0x6d,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x6d, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0f, 0x6d, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x6d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x0a, 0x15, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x1a, 0x65, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0xbf, 0x04, 0x0a, 0x0a, 0x43, 0x57, 0x43,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x00, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x41, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x48, 0x00, 0x52, 0x0d, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x3d, 0x0a, 0x10,
	0x75, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x6e, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x12, 0x65,
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x11, 0x65,
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x09, 0x6b, 0x65, 0x79,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b,
	0x63, 0x77, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cwcpb_proto_rawDescOnce sync.Once
	file_cwcpb_proto_rawDescData = file_cwcpb_proto_rawDesc
)

func file_cwcpb_proto_rawDescGZIP() []byte {
	file_cwcpb_proto_rawDescOnce.Do(func() {
		file_cwcpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_cwcpb_proto_rawDescData)
	})
	return file_cwcpb_proto_rawDescData
}

var file_cwcpb_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_cwcpb_proto_goTypes = []interface{}{
	(*EnumerateChannels)(nil),     // 0: EnumerateChannels
	(*ListChannels)(nil),          // 1: ListChannels
	(*TimeSync)(nil),              // 2: TimeSync
	(*TimeSyncResponse)(nil),      // 3: TimeSyncResponse
	(*ListenRequest)(nil),         // 4: ListenRequest
	(*ListenConfirm)(nil),         // 5: ListenConfirm
	(*UnlistenRequest)(nil),       // 6: UnlistenRequest
	(*KeyValue)(nil),              // 7: KeyValue
	(*CarrierEvent)(nil),          // 8: CarrierEvent
	(*VersionInfo)(nil),           // 9: VersionInfo
	(*CWCMessage)(nil),            // 10: CWCMessage
	(*CarrierEvent_BitEvent)(nil), // 11: CarrierEvent.BitEvent
	(*VersionInfo_Version)(nil),   // 12: VersionInfo.Version
}
var file_cwcpb_proto_depIdxs = []int32{
	11, // 0: CarrierEvent.bit_events:type_name -> CarrierEvent.BitEvent
	9,  // 1: VersionInfo.my_protocol_version:type_name -> VersionInfo
	9,  // 2: VersionInfo.my_code_version:type_name -> VersionInfo
	9,  // 3: VersionInfo.latest_stable_version:type_name -> VersionInfo
	8,  // 4: CWCMessage.carrier_event:type_name -> CarrierEvent
	2,  // 5: CWCMessage.time_sync:type_name -> TimeSync
	3,  // 6: CWCMessage.time_sync_response:type_name -> TimeSyncResponse
	4,  // 7: CWCMessage.listen_request:type_name -> ListenRequest
	5,  // 8: CWCMessage.listen_confirm:type_name -> ListenConfirm
	6,  // 9: CWCMessage.unlisten_request:type_name -> UnlistenRequest
	0,  // 10: CWCMessage.enumerate_channels:type_name -> EnumerateChannels
	1,  // 11: CWCMessage.list_channels:type_name -> ListChannels
	9,  // 12: CWCMessage.version_info:type_name -> VersionInfo
	7,  // 13: CWCMessage.key_value:type_name -> KeyValue
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_cwcpb_proto_init() }
func file_cwcpb_proto_init() {
	if File_cwcpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cwcpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumerateChannels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChannels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlistenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CWCMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarrierEvent_BitEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwcpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfo_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cwcpb_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*CWCMessage_CarrierEvent)(nil),
		(*CWCMessage_TimeSync)(nil),
		(*CWCMessage_TimeSyncResponse)(nil),
		(*CWCMessage_ListenRequest)(nil),
		(*CWCMessage_ListenConfirm)(nil),
		(*CWCMessage_UnlistenRequest)(nil),
		(*CWCMessage_EnumerateChannels)(nil),
		(*CWCMessage_ListChannels)(nil),
		(*CWCMessage_VersionInfo)(nil),
		(*CWCMessage_KeyValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cwcpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cwcpb_proto_goTypes,
		DependencyIndexes: file_cwcpb_proto_depIdxs,
		MessageInfos:      file_cwcpb_proto_msgTypes,
	}.Build()
	File_cwcpb_proto = out.File
	file_cwcpb_proto_rawDesc = nil
	file_cwcpb_proto_goTypes = nil
	file_cwcpb_proto_depIdxs = nil
}
